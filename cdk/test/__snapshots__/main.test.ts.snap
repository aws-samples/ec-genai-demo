// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Outputs": {
    "ECxGenAIDemoURL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "CloudFrontEcGenaiDemoCF4E2742DB",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
    "ecsserviceEcGenaiDemoServiceLoadBalancerDNSAD0082AE": {
      "Value": {
        "Fn::GetAtt": [
          "ecsserviceEcGenaiDemoServiceLB8C9D9F79",
          "DNSName",
        ],
      },
    },
    "ecsserviceEcGenaiDemoServiceServiceURLB66F0844": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ecsserviceEcGenaiDemoServiceLB8C9D9F79",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CloudFrontEcGenaiDemoCF4E2742DB": {
      "Properties": {
        "DistributionConfig": {
          "Comment": "EC x GenAI",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "TargetOriginId": "testCloudFrontEcGenaiDemoCFOrigin199CF718C",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::GetAtt": [
                  "ecsserviceEcGenaiDemoServiceLB8C9D9F79",
                  "DNSName",
                ],
              },
              "Id": "testCloudFrontEcGenaiDemoCFOrigin199CF718C",
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "EcGenaiDemoRole3251E2D7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/TranslateFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcGenaiDemoRoleDefaultPolicyA05F5521": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "bedrock:InvokeModel",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcGenaiDemoRoleDefaultPolicyA05F5521",
        "Roles": [
          {
            "Ref": "EcGenaiDemoRole3251E2D7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcGenaiDemoVpc59EE1B8B": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "EcGenaiDemoVpcIGW2E26EEDC": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "EcGenaiDemoVpcPrivateSubnet1DefaultRouteB3F53CEE": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet1NATGatewayB9597C06",
        },
        "RouteTableId": {
          "Ref": "EcGenaiDemoVpcPrivateSubnet1RouteTable3D08B855",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcGenaiDemoVpcPrivateSubnet1RouteTable3D08B855": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcGenaiDemoVpcPrivateSubnet1RouteTableAssociation59563B85": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcGenaiDemoVpcPrivateSubnet1RouteTable3D08B855",
        },
        "SubnetId": {
          "Ref": "EcGenaiDemoVpcPrivateSubnet1Subnet473DDEFB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcGenaiDemoVpcPrivateSubnet1Subnet473DDEFB": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcGenaiDemoVpcPrivateSubnet2DefaultRouteB2A5EAE0": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet1NATGatewayB9597C06",
        },
        "RouteTableId": {
          "Ref": "EcGenaiDemoVpcPrivateSubnet2RouteTable53B02398",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcGenaiDemoVpcPrivateSubnet2RouteTable53B02398": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcGenaiDemoVpcPrivateSubnet2RouteTableAssociation8017CD95": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcGenaiDemoVpcPrivateSubnet2RouteTable53B02398",
        },
        "SubnetId": {
          "Ref": "EcGenaiDemoVpcPrivateSubnet2Subnet2BCB0960",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcGenaiDemoVpcPrivateSubnet2Subnet2BCB0960": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcGenaiDemoVpcPublicSubnet1DefaultRoute3B5B54BD": {
      "DependsOn": [
        "EcGenaiDemoVpcVPCGW68BBCAD9",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "EcGenaiDemoVpcIGW2E26EEDC",
        },
        "RouteTableId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet1RouteTableE06F3ED1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcGenaiDemoVpcPublicSubnet1EIP238824A7": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "EcGenaiDemoVpcPublicSubnet1NATGatewayB9597C06": {
      "DependsOn": [
        "EcGenaiDemoVpcPublicSubnet1DefaultRoute3B5B54BD",
        "EcGenaiDemoVpcPublicSubnet1RouteTableAssociation03FF1E42",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EcGenaiDemoVpcPublicSubnet1EIP238824A7",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet1Subnet41FF4599",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "EcGenaiDemoVpcPublicSubnet1RouteTableAssociation03FF1E42": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet1RouteTableE06F3ED1",
        },
        "SubnetId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet1Subnet41FF4599",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcGenaiDemoVpcPublicSubnet1RouteTableE06F3ED1": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcGenaiDemoVpcPublicSubnet1Subnet41FF4599": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcGenaiDemoVpcPublicSubnet2DefaultRoute564507D5": {
      "DependsOn": [
        "EcGenaiDemoVpcVPCGW68BBCAD9",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "EcGenaiDemoVpcIGW2E26EEDC",
        },
        "RouteTableId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet2RouteTable05439FF0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcGenaiDemoVpcPublicSubnet2RouteTable05439FF0": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcGenaiDemoVpcPublicSubnet2RouteTableAssociation37291373": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet2RouteTable05439FF0",
        },
        "SubnetId": {
          "Ref": "EcGenaiDemoVpcPublicSubnet2SubnetAEE15CAC",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcGenaiDemoVpcPublicSubnet2SubnetAEE15CAC": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/EcGenaiDemoVpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcGenaiDemoVpcVPCGW68BBCAD9": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "EcGenaiDemoVpcIGW2E26EEDC",
        },
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "ecsserviceEcGenaiDemoCluster0F5E8AB5": {
      "Type": "AWS::ECS::Cluster",
    },
    "ecsserviceEcGenaiDemoService94080D97": {
      "DependsOn": [
        "EcGenaiDemoRoleDefaultPolicyA05F5521",
        "EcGenaiDemoRole3251E2D7",
        "ecsserviceEcGenaiDemoServiceLBPublicListenerECSGroup05D0BD8D",
        "ecsserviceEcGenaiDemoServiceLBPublicListenerE7008668",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ecsserviceEcGenaiDemoCluster0F5E8AB5",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "EcGenaiDemoContainer",
            "ContainerPort": 8501,
            "TargetGroupArn": {
              "Ref": "ecsserviceEcGenaiDemoServiceLBPublicListenerECSGroup05D0BD8D",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ecsserviceEcGenaiDemoServiceSecurityGroupAD4296BB",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "EcGenaiDemoVpcPrivateSubnet1Subnet473DDEFB",
              },
              {
                "Ref": "EcGenaiDemoVpcPrivateSubnet2Subnet2BCB0960",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "ecsserviceEcGenaiDemoTaskDef18287094",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ecsserviceEcGenaiDemoServiceLB8C9D9F79": {
      "DependsOn": [
        "EcGenaiDemoVpcPublicSubnet1DefaultRoute3B5B54BD",
        "EcGenaiDemoVpcPublicSubnet1RouteTableAssociation03FF1E42",
        "EcGenaiDemoVpcPublicSubnet2DefaultRoute564507D5",
        "EcGenaiDemoVpcPublicSubnet2RouteTableAssociation37291373",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Name": "EcGenaiDemoALB",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ecsserviceEcGenaiDemoServiceLBSecurityGroupAE7DE7A2",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "ecsserviceSecurityGroupB9B0227A",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "EcGenaiDemoVpcPublicSubnet1Subnet41FF4599",
          },
          {
            "Ref": "EcGenaiDemoVpcPublicSubnet2SubnetAEE15CAC",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ecsserviceEcGenaiDemoServiceLBPublicListenerE7008668": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ecsserviceEcGenaiDemoServiceLBPublicListenerECSGroup05D0BD8D",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "ecsserviceEcGenaiDemoServiceLB8C9D9F79",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ecsserviceEcGenaiDemoServiceLBPublicListenerECSGroup05D0BD8D": {
      "Properties": {
        "HealthCheckIntervalSeconds": 45,
        "HealthCheckPath": "/",
        "HealthCheckPort": "8501",
        "HealthCheckTimeoutSeconds": 30,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "true",
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie",
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": "86400",
          },
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ecsserviceEcGenaiDemoServiceLBSecurityGroupAE7DE7A2": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB testecsserviceEcGenaiDemoServiceLB3CABBDF8",
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ecsserviceEcGenaiDemoServiceLBSecurityGrouptotestecsserviceEcGenaiDemoServiceSecurityGroup1328712B85011407FB57": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ecsserviceEcGenaiDemoServiceSecurityGroupAD4296BB",
            "GroupId",
          ],
        },
        "FromPort": 8501,
        "GroupId": {
          "Fn::GetAtt": [
            "ecsserviceEcGenaiDemoServiceLBSecurityGroupAE7DE7A2",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8501,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ecsserviceEcGenaiDemoServiceSecurityGroupAD4296BB": {
      "DependsOn": [
        "EcGenaiDemoRoleDefaultPolicyA05F5521",
        "EcGenaiDemoRole3251E2D7",
      ],
      "Properties": {
        "GroupDescription": "test/ecs-service/EcGenaiDemoService/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ecsserviceEcGenaiDemoServiceSecurityGroupfromtestecsserviceEcGenaiDemoServiceLBSecurityGroupD7FA9EC4850113DF38DA": {
      "DependsOn": [
        "EcGenaiDemoRoleDefaultPolicyA05F5521",
        "EcGenaiDemoRole3251E2D7",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8501,
        "GroupId": {
          "Fn::GetAtt": [
            "ecsserviceEcGenaiDemoServiceSecurityGroupAD4296BB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ecsserviceEcGenaiDemoServiceLBSecurityGroupAE7DE7A2",
            "GroupId",
          ],
        },
        "ToPort": 8501,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ecsserviceEcGenaiDemoServiceSecurityGroupfromtestecsserviceSecurityGroupCC7BEF818501FDC6E4A3": {
      "DependsOn": [
        "EcGenaiDemoRoleDefaultPolicyA05F5521",
        "EcGenaiDemoRole3251E2D7",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8501,
        "GroupId": {
          "Fn::GetAtt": [
            "ecsserviceEcGenaiDemoServiceSecurityGroupAD4296BB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ecsserviceSecurityGroupB9B0227A",
            "GroupId",
          ],
        },
        "ToPort": 8501,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ecsserviceEcGenaiDemoTaskDef18287094": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "region",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:d05f56ab1ee1004edec3b5c79b6173587fdb9bb1b022710ecbb91fdec7cc890b",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "ecsserviceEcGenaiDemoTaskDefEcGenaiDemoContainerLogGroup16AC7807",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "EcGenaiDemoContainer",
            "PortMappings": [
              {
                "ContainerPort": 8501,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "8192",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ecsserviceEcGenaiDemoTaskDefExecutionRoleF8ADF8A5",
            "Arn",
          ],
        },
        "Family": "testecsserviceEcGenaiDemoTaskDef0B79A68F",
        "Memory": "16384",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "X86_64",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "EcGenaiDemoRole3251E2D7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ecsserviceEcGenaiDemoTaskDefEcGenaiDemoContainerLogGroup16AC7807": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ecsserviceEcGenaiDemoTaskDefExecutionRoleDefaultPolicyE1F6C9D5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ecsserviceEcGenaiDemoTaskDefEcGenaiDemoContainerLogGroup16AC7807",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ecsserviceEcGenaiDemoTaskDefExecutionRoleDefaultPolicyE1F6C9D5",
        "Roles": [
          {
            "Ref": "ecsserviceEcGenaiDemoTaskDefExecutionRoleF8ADF8A5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ecsserviceEcGenaiDemoTaskDefExecutionRoleF8ADF8A5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ecsserviceSecurityGroupB9B0227A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-EC23",
              "reason": "ALB is open for all ip with HTTP",
            },
          ],
        },
      },
      "Properties": {
        "GroupDescription": "test/ecs-service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "EcGenaiDemoVpc59EE1B8B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
